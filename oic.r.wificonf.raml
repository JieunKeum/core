#%RAML 0.8
title: Wi-Fi Configuration Resource
version: v0.0.1-20161125
documentation:
  - title: OCF Copyright
    content: Copyright (c) 2017 Open Connectivity Foundation, Inc. All rights reserved.
  - title: OCF License
    content: !include LICENSE.md
  - title: OCF Disclaimer
    content: !include DISCLAIMER.md

schemas:
  - WiFiConf: !include schemas/oic.r.wificonf-schema.json
  - WiFiConfUpdate: !include schemas/oic.r.wificonf-update-schema.json

traits:
  - interface:
      queryParameters:
        if:
          enum: ["oic.if.baseline"]

/example/WiFiConfResURI:
  description: |
    WiFiConf resource stores essential information to help an unboxing device
    to connect to an existing Wi-Fi AP. The information includes :
    1. Wi-Fi SSID and password
    2. Wi-Fi Security type (i.e. auth type and encription type)
    3. Wi-Fi hardware capability (i.e. supported frequency and mode)

  displayName: Wi-Fi Configuration
  is: [ interface ] # valid for all methods

  get:
    description: |
      Retrieve properties of WiFiConf resource.

    queryParameters:
      if:
        default: oic.if.baseline
        required: true

    responses:
      200:
        body:
          application/json:
            schema: WiFiConf
            example: |
              {
                "rt": ["oic.r.wificonf"],
                "swmt" : ["A", "B", "G"],
                "swf": ["2_4G", "5G"],
                "tnn": "Home_AP_SSID",
                "cd": "Home_AP_PWD",
                "wat": "WPA2_PSK",
                "wet": "TKIP",
                "swat": ["WPA_PSK", "WPA2_PSK"],
                "swet": ["TKIP", "AES", "TKIP_AES"]
              }

  post:
    description: |
      Deliver Wi-Fi AP's information for an unboxing device to connect to it.
      Note that, supported frequency and mode CANNOT be written by the POST
      request.

    queryParameters:
      if:
        default: oic.if.baseline
        required: true

    body:
      application/json:
        schema: WiFiConfUpdate
        example: |
          {
            "tnn": "Home_AP_SSID",
            "cd": "Home_AP_PWD",
            "wat": "WPA2_PSK",
            "wet": "AES"
          }
    responses:
      200:
        body:
          application/json:
            schema: WiFiConfUpdate
            example: |
              {
                "tnn": "Home_AP_SSID",
                "cd": "Home_AP_PWD",
                "wat": "WPA2_PSK",
                "wet": "AES"
              }
